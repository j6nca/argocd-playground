apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ .Release.Name }}
spec:
  generators:
    - list:
        elements:
{{- $global_services_settings := $.Files.Get "services/settings.yaml" | fromYaml }}
{{- $services := dict }}
{{- range $service_chart_file, $_ := $.Files.Glob "services/*/Chart.yaml" }}
  {{- $service_name := dir $service_chart_file | base }}
  {{- $_ := set $services $service_name "enabled" }}
{{- end }}
{{- $deployment_path := printf "deployments/%s/*.yaml" .Values.deploy_folder }}
{{- range $deployment_file, $_ := .Files.Glob $deployment_path }}
  {{- $deployment_settings := $.Files.Get $deployment_file | fromYaml }}
  {{- $region := get $deployment_settings "region" }}
  {{- $env_dir := dir $deployment_file }}
  {{- $deployment_name := trimSuffix ".yaml" $deployment_file | base }}
  {{- $env_name := base $env_dir }}
  {{- $project := get $deployment_settings "project" }}
  {{- if not $project }}
  {{- $project = $env_name }}
  {{- end }}

      {{- range $service_name := keys $services }}
        {{- $args := dict "the_path" (cat "helm." $service_name ".enabled" | nospace) "the_map" $deployment_settings }}
        {{- $service_enabled_for_deployment := ( include "getStringValue" $args ) }}
        {{- $args := dict "the_path" (cat "global." $service_name ".disabled" | nospace) "the_map" $global_services_settings }}
        {{- $service_disabled_globally := ( include "getStringValue" $args ) }}
        {{- $service_enabled := true }}
        {{- if and (eq $service_disabled_globally "true") (ne $service_enabled_for_deployment "true") }}
          {{- $service_enabled = false }}
        {{- end }}
        {{- if and (ne $service_disabled_globally "true") (eq $service_enabled_for_deployment "false") }}
          {{- $service_enabled = false }}
        {{- end }}
        {{- if $service_enabled }}
          - cluster: "not-used"
            url: "not-used"
            values:
              env: {{ $env_name }}
              deployment: {{ $deployment_name }}
              service: {{ $service_name }}
              region: {{ $region }}
              project: {{ $project }}
            
        {{- end }}
      {{- end }}
{{- end }}
  template:
    metadata:
      name: "{{"{{"}}values.env{{"}}"}}-{{"{{"}}values.deployment{{"}}"}}"
    spec:
      project: default
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: https://github.com/jngbot/argocd-playground.git
        targetRevision: master
        path: applications/guest-book
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: default